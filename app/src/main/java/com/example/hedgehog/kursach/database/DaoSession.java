package com.example.hedgehog.kursach.database;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.hedgehog.kursach.database.Comments;
import com.example.hedgehog.kursach.database.Films;
import com.example.hedgehog.kursach.database.Operations;
import com.example.hedgehog.kursach.database.Subscribtions;
import com.example.hedgehog.kursach.database.Users;

import com.example.hedgehog.kursach.database.CommentsDao;
import com.example.hedgehog.kursach.database.FilmsDao;
import com.example.hedgehog.kursach.database.OperationsDao;
import com.example.hedgehog.kursach.database.SubscribtionsDao;
import com.example.hedgehog.kursach.database.UsersDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig commentsDaoConfig;
    private final DaoConfig filmsDaoConfig;
    private final DaoConfig operationsDaoConfig;
    private final DaoConfig subscribtionsDaoConfig;
    private final DaoConfig usersDaoConfig;

    private final CommentsDao commentsDao;
    private final FilmsDao filmsDao;
    private final OperationsDao operationsDao;
    private final SubscribtionsDao subscribtionsDao;
    private final UsersDao usersDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        commentsDaoConfig = daoConfigMap.get(CommentsDao.class).clone();
        commentsDaoConfig.initIdentityScope(type);

        filmsDaoConfig = daoConfigMap.get(FilmsDao.class).clone();
        filmsDaoConfig.initIdentityScope(type);

        operationsDaoConfig = daoConfigMap.get(OperationsDao.class).clone();
        operationsDaoConfig.initIdentityScope(type);

        subscribtionsDaoConfig = daoConfigMap.get(SubscribtionsDao.class).clone();
        subscribtionsDaoConfig.initIdentityScope(type);

        usersDaoConfig = daoConfigMap.get(UsersDao.class).clone();
        usersDaoConfig.initIdentityScope(type);

        commentsDao = new CommentsDao(commentsDaoConfig, this);
        filmsDao = new FilmsDao(filmsDaoConfig, this);
        operationsDao = new OperationsDao(operationsDaoConfig, this);
        subscribtionsDao = new SubscribtionsDao(subscribtionsDaoConfig, this);
        usersDao = new UsersDao(usersDaoConfig, this);

        registerDao(Comments.class, commentsDao);
        registerDao(Films.class, filmsDao);
        registerDao(Operations.class, operationsDao);
        registerDao(Subscribtions.class, subscribtionsDao);
        registerDao(Users.class, usersDao);
    }

    public void clear() {
        commentsDaoConfig.clearIdentityScope();
        filmsDaoConfig.clearIdentityScope();
        operationsDaoConfig.clearIdentityScope();
        subscribtionsDaoConfig.clearIdentityScope();
        usersDaoConfig.clearIdentityScope();
    }

    public CommentsDao getCommentsDao() {
        return commentsDao;
    }

    public FilmsDao getFilmsDao() {
        return filmsDao;
    }

    public OperationsDao getOperationsDao() {
        return operationsDao;
    }

    public SubscribtionsDao getSubscribtionsDao() {
        return subscribtionsDao;
    }

    public UsersDao getUsersDao() {
        return usersDao;
    }

}
